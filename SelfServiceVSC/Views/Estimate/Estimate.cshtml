@{
	ViewData["Title"] = "Contract Details";

	var session = this.Context.Session.GetSessionDetails();
}

@if (SelfServiceVSC.AppSettings.IsDevelopment)
{
	<pre>
		@Json.Serialize(session);
	</pre>
}

<div id="error" style="display: none" class="alert alert-danger" role="alert"></div>
<div id="success" style="display: none" class="alert alert-success" role="alert"></div>

<div class="container" id="estimateListParent">
	<div class="row" id="estimateListContainer">
		<div class="col-md-6 p-1 d-none" id="estimateTemplate">
			<div class="card estimate">
				<div class="card-body">
					<div class="row">
						<div class="col-md-12">
							<span class="termMonths"></span> Month / <span class="termMiles"></span> mile <span
								class="planName"></span>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6">
							$ <span class="deductible"></span> Deductible
						</div>
						<div class="col-md-6">
							Cost: $ <span class="cost"></span>
						</div>
                        <div class="col-md-6"></div>
                        <div class="col-md-6">
                            <label id="cost_after_discount">Cost(after 10% discount): $</label>
                        </div>
					</div>
					<div class="row">
						<div class="col-md-12">
							Per Month: $ <span class="costPerMonth"></span> (<span class="paymentMonths"></span> monthly payments)
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-md-12 text-center">
		@* todo: error inline here? *@
		<button type="button" class="btn btn-success rounded-pill p-4 pt-2 pb-2" id="chooseEstimate">
			Select this Service Contract and Proceed
		</button>
	</div>
</div>

<div class="container row" id="estimateDetails" style="display: none;">
	<h4 class="text-center">Selected Contract Details</h4>
	<div class="row">
		<div class="col-md-6">
			<span class="planName"></span>
		</div>
        <div class="col-md-6">
            $ <span class="deductible"></span> Deductible
        </div>
	</div>
	
	<div class="row">
		<div class="col-md-6">
			Cost: $ <span class="cost"></span>
		</div>
        <div class="col-md-6">
            Expiration Date:  <span class="expirationD"></span>
        </div>
	</div>
    
    <div class="row">
        <div class="col-md-6">
            Expiration Mileage: $ <span class="expirationM"></span>
        </div>
    </div>
</div>

<div class="container row" id="choosePaymentOption" style="display: none;">
    <div class="row">
        <div class="col-lg-14">
            Please upload a photo of your vehicleâ€™s current odometer reading (photo must match the odometer reading you entered for your quote)
        </div>
    </div>

    <div class="row">
        <div class="card-header">
            <h6 class="text-center">Confirm Your Odomter</h6>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="container row mt-3">
                    <div class="form-group col-12">
                        <label for="form_odometer_image">Please attach a photo of your odometer here:</label><br />
                        <input type="file" name="OdometerImage" id="form_odometer_image" /><br />
                        <button class="btn btn-success mt-3" id="uploadButton">Upload</button>
                        <label>Please upload a file</label>
                    </div>
                    <div class="form-group col-12">
                        <label for="form_digitally_signed">
                            I hereby certify that I am the above person and this information is true and
                            correct
                        </label><br />
                        <input type="checkbox" name="DigitallySigned" id="form_digitally_signed" value="true" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">

	    <div class="card-header">
            <h6 class="text-center">Choose Your Payment Method</h6>
        </div>
        <div class="container row mt-3">
            <div class="form-group col-4">
                <label><a href="#" id="payByCreditCard" class="mt-3">Pay By Credit Card (10% discount off quoted price)</a></label>
            </div>
            <div class="form-group col-4">
                <button class="btn btn-sm btn-success mt-0" id="btpayByCreditCard" style="display: inline-block;">Pay By Credit Card</button>
            </div>
           
        </div>
        <div class="container row mt-3">
            <div class="form-group col-4">
                <label><a href="#" id="choosePaymentPlan" class="mt-3"> Choose a Payment Plan</a></label>
            </div>
            <div class="form-group col-4">
                <button class="btn btn-sm btn-success mt-0" id="btchoosePaymentPlan" style="display: inline-block;">Choose a Payment Plan</button>
            </div>
        </div>
    </div>
</div>


<form id="quote_form" name="quote_form" method="post" action="/Quote">
	<div class="container row d-none mt-3" id="quoteRequestDetails">
		<div class="col-md-12">
			<div class="card transparent">
				<div class="card-header">
					<h3 class="text-center">Proceed with This Contract</h3>
				</div>
				<div class="card-body">
					<p class="form-section">Fill in your contact information to get a payment plan and view your selected
						contract!</p>
					<div class="row mt-1">
						<div class="col-md-6">
							<label for="form_fname">First Name</label>
							<input type="text" name="fname" id="form_fname" class="form-control" value="" placeholder="First Name" />
						</div>
						<div class="col-md-6">
							<label for="form_lname">Last Name</label>
							<input type="text" name="lname" id="form_lname" class="form-control" value="" placeholder="Last Name" />
						</div>
					</div>
					<div class="row mt-1">
						<div class="col-md-6">
							<label for="form_email">Email Address</label>
							<input name="email" id="form_email" class="form-control" value="" placeholder="you@mail.com"
								data-inputmask="'alias': 'email'" inputmode="email" />
						</div>
						<div class="col-md-6">
							<label for="form_phone">Phone</label>
							<input type="tel" name="phone" id="form_phone" class="form-control" value="" placeholder="(###) ###-####"
								data-inputmask="'mask': '(999) 999-9999'" inputmode="tel" />
						</div>
					</div>
					<div class="row mt-1">
						<div class="col-md-6">
							<label for="form_address1">Street Address</label>
							<input type="text" name="address1" id="form_address1" class="form-control" value=""
								placeholder="Street Address" />
						</div>
						<div class="col-md-6">
							<label for="form_address2">Street Address (Cont.)</label>
							<input type="text" name="address2" id="form_address2" class="form-control" value=""
								placeholder="Street Address (Cont.)" />
						</div>
					</div>
					<div class="row mt-1">
						<div class="col-md-4">
							<label for="form_city">City</label>
							<input type="text" name="city" id="form_city" class="form-control" value="" placeholder="City" />
						</div>
						<div class="col-md-4">
							<label for="form_state">State</label>
							<select name="state" id="form_state" class="form-control">
								<option disabled selected value="">Select State</option>
								<option value="AL">Alabama</option>
								<option value="AK">Alaska</option>
								<option value="AZ">Arizona</option>
								<option value="AR">Arkansas</option>
								<option value="CA">California</option>
								<option value="CO">Colorado</option>
								<option value="CT">Connecticut</option>
								<option value="DE">Delaware</option>
								<option value="DC">District</option>
								<option value="FL">Florida</option>
								<option value="GA">Georgia</option>
								<option value="HI">Hawaii</option>
								<option value="ID">Idaho</option>
								<option value="IL">Illinois</option>
								<option value="IN">Indiana</option>
								<option value="IA">Iowa</option>
								<option value="KS">Kansas</option>
								<option value="KY">Kentucky</option>
								<option value="LA">Louisiana</option>
								<option value="ME">Maine</option>
								<option value="MD">Maryland</option>
								<option value="MA">Massachusetts</option>
								<option value="MI">Michigan</option>
								<option value="MN">Minnesota</option>
								<option value="MS">Mississippi</option>
								<option value="MO">Missouri</option>
								<option value="MT">Montana</option>
								<option value="NE">Nebraska</option>
								<option value="NV">Nevada</option>
								<option value="NH">New</option>
								<option value="NJ">New</option>
								<option value="NM">New</option>
								<option value="NY">New</option>
								<option value="NC">North</option>
								<option value="ND">North</option>
								<option value="OH">Ohio</option>
								<option value="OK">Oklahoma</option>
								<option value="OR">Oregon</option>
								<option value="PA">Pennsylvania</option>
								<option value="RI">Rhode</option>
								<option value="SC">South</option>
								<option value="SD">South</option>
								<option value="TN">Tennessee</option>
								<option value="TX">Texas</option>
								<option value="UT">Utah</option>
								<option value="VT">Vermont</option>
								<option value="VA">Virginia</option>
								<option value="WA">Washington</option>
								<option value="WV">West</option>
								<option value="WI">Wisconsin</option>
								<option value="WY">Wyoming</option>
							</select>
						</div>
						<div class="col-md-4">
							<label for="form_zip">ZIP Code</label>
							<input type="text" name="zip" id="form_zip" class="form-control" value="" placeholder="ZIP Code"
								data-inputmask="'mask': '99999'" inputmode="numeric" />
						</div>
					</div>
					<hr />
					<div class="text-center">
						<button id="submit_quote" type="button" class="btn btn-success rounded-pill p-4 pt-2 pb-2">Get a Payment
							Plan</button>
					</div>
					<hr />
					<p class="text-center">You can always call us at <a href="tel:@SelfServiceVSC.AppSettings.PhoneNumberMain"><i
								class="fas fa-phone-alt small m-1"></i>@SelfServiceVSC.AppSettings.PhoneNumberMain.FormatPhone()</a></p>
				</div>
			</div>
		</div>
	</div>
</form>

<form id="estimate_form" name="estimate_form" method="post" action="/SelectEstimate">
	<input type="hidden" id="rateId" name="rateId" value="" />
</form>

@section Scripts {
	<style type="text/css">
		body {
			background-image: linear-gradient(white 20%, transparent 30%, transparent 70%, white 80%, white 600%), url('/img/bg/bg02.jpg');
		}
	</style>
	<script type="text/javascript">
		$(function () {
			$('.alert').alert();
			$(":input").inputmask();

			$("#quote_form").validate({
				rules: {
					fname: "required",
					lname: "required",
					email: {
						required: true,
						pattern: ".*@@.*\\..*"
					},
					phone: {
						required: true,
						pattern: "\\(\\d{3}\\) \\d{3}-\\d{4}"
					},
					address1: "required",
					city: "required",
					state: "required",
					zip: {
						required: true,
						minlength: 5,
						maxlength: 5
					}
				},
				messages: {
					fname: "First Name is required",
					lname: "Last Name is required",
					email: "Email Address is required",
					phone: "Phone number must contain at least 10 digits",
					address1: "Street Address is required",
					address2: "",
					city: "City is required",
					state: "State is required",
					zip: "ZIP Code must be 5 digits"
				}
			});

			// this doesn't really have to be all ajaxy... we can just do this all on the page render
			$.ajax({
				type: "get",
				url: "/RetrieveEstimate",
				data: JSON.stringify(""),
				success: function (data) {
					data.forEach((estimate) => {
                        setEstimationCost(estimate);
						let card = $("#estimateTemplate").clone();
						card.show();
						card.find(".termMonths").text(estimate.term.toLocaleString());
						card.find(".termMiles").text(estimate.mileage.toLocaleString());
						card.find(".planName").text(estimate.planDescription);
						card.find(".deductible").text(estimate.deductAmt.toLocaleString());
						card.find(".cost").text(estimate.retailRate.toLocaleString());

						// todo(rec): dangerous javascript numbers
						card.find(".costPerMonth").text((estimate.retailRate / Math.min(24, estimate.term - 12)).toFixed(2).toLocaleString());
						card.find(".paymentMonths").text(Math.min(24, estimate.term - 12).toLocaleString());
						card.find(".card.estimate").attr("rateId", estimate.rateId);
						card.removeAttr("id");

						card.appendTo("#estimateListContainer");
                        
					});
				},
				contentType: "application/json"
			});

			$("body").on(
				"click",
				".card.estimate",
				(event) => {
					preventEvent(event);
					let card = $(event.target).closest(".card.estimate");
					let rateId = card.attr("rateId");
					if (card.hasClass("selected")) {
						card.removeClass("selected");
						$("#rateId").val("");
					}
					else {
						$(".card.estimate.selected").removeClass("selected");
						card.addClass("selected");
						$("#rateId").val(rateId)
					}
				});

			$("#chooseEstimate").on(
				"click select",
				(event) => {
					preventEvent(event);
					formSubmit({
						form: $("#estimate_form"),
						url: "/SelectEstimate",
						failedFunction: function (xhr, status, error) {
							// todo: maybe have these all have their own error panels near the buttons
							$("#error").show().text(error);
						},
						successFunction: function (data) {
							if (data === false) {
								$("#error").show().text("An unknown error occurred while processing your request.");
							}
							else {
								let card = $("#estimateDetails");

								card.find(".termMonths").text(data.term.toLocaleString());
								card.find(".termMiles").text(data.mileage.toLocaleString());
								card.find(".planName").text(data.planDescription);
								card.find(".deductible").text(data.deductAmt.toLocaleString());
								card.find(".cost").text(data.retailRate.toLocaleString());
								card.find(".card.quote").attr("rateId", data.rateId);
                                var expirationDate = new Date(data.expirationDate);
                                var formattedDate = expirationDate.toISOString().split('T')[0];
                                card.find(".expirationD").text(formattedDate);
                                card.find(".expirationM").text(data.expirationMileage.toLocaleString());
                              

								window.scrollTo(0, 0);

								$("#estimateListParent").slideUp("slow");
								card.slideDown("slow");
								$("#quoteRequestDetails").slideDown("slow");
							}
						},

					});
				});

            function setEstimationCost(estimate) {
                // Get the original cost value from the label

                var originalCost = estimate.retailRate

                // Calculate the discounted cost (90% of the original cost)
                var discountedCost = originalCost * 0.9;

                // Set the value in the "cost_after_discount" label
                var costAfterDiscountLabel = document.getElementById("cost_after_discount");
                costAfterDiscountLabel.innerText = "Cost (after 10% discount) $" + discountedCost.toFixed(2);
            }

                $(document).ready(function () {
                $("#form_odometer_image").val("");
                $("#uploadButton").on("click", function () {
                    
                    var formData = new FormData();
                    var fileInput = $("#form_odometer_image")[0].files[0];

                    formData.append("file", fileInput);
                    $.ajax({
                        url: "/SaveFile",
                        type: "POST",
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (data) {
                            var successDiv = document.getElementById("success");
                            var errorDiv = document.getElementById("error");
                            if (data.message == "Please upload a file first.") {
                                errorDiv.innerText = "Please choose a file first!";
                                errorDiv.style.display = "block";

                                setTimeout(function () {
                                    errorDiv.style.display = "none";
                                }, 3000);
                            }
                            else if (data.message == "Upload successful!") {
                                successDiv.innerText = "Odometer pic uploaded successfully!";
                                successDiv.style.display = "block";

                                setTimeout(function () {
                                    successDiv.style.display = "none";
                                }, 3000);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error uploading file", error);
                          
                        }
                    });
                });
            });

            $(document).ready(function () {
                
                const isCheckboxChecked = $("#form_digitally_signed").is(":checked");

              
                if (isCheckboxChecked) {
                    $("#form_digitally_signed").prop("checked", false);
                }

                let isButtonClicked = false;  // Initialize a variable to track the state

                uploadButton.addEventListener("click", function () {
                    isButtonClicked = true;  // Set the variable to true when the button is clicked
                    console.log("Button clicked! isButtonClicked is now:", isButtonClicked);
                });

                $("#choosePaymentPlan,#btchoosePaymentPlan").on("click", function (event) {
                    const isCheckboxChecked = $("#form_digitally_signed").is(":checked");
                    const fileInput = document.getElementById("form_odometer_image");
                    if (isCheckboxChecked && fileInput.files.length !== 0 && isButtonClicked) {
                        event.preventDefault();
                        window.location = "/payment-plans";
                    } else if (!isCheckboxChecked) {
                        $("#form_digitally_signed").siblings("label").addClass("fw-bold text-danger");
                        $("#form_digitally_signed").focus();
                    }
                    else if (fileInput.files.length === 0) {
                        $("#form_odometer_image").siblings("label").addClass("fw-bold text-danger");
                        $("#form_odometer_image").focus();

                        fileInput.addEventListener("change", function () {
                            if (this.files.length > 0) {
                                $("#form_odometer_image").siblings("label").removeClass("fw-bold text-danger");
                            }
                        });
                    }
                    else if (!isButtonClicked) {
                        $("#form_odometer_image").siblings("label").addClass("fw-bold text-danger");
                        $("#form_odometer_image").focus();

                        fileInput.addEventListener("change", function () {
                            if (this.files.length > 0) {
                                $("#form_odometer_image").siblings("label").removeClass("fw-bold text-danger");
                            }
                        });
                    }
                });

                $("#payByCreditCard,#btpayByCreditCard").on("click", function (event) {
                    const isCheckboxChecked = $("#form_digitally_signed").is(":checked");
                    const fileInput = document.getElementById("form_odometer_image");
                    if (isCheckboxChecked && fileInput.files.length !== 0 && isButtonClicked) {
                        event.preventDefault();
                        window.location = "/payment-details";
                    } else if (!isCheckboxChecked) {
                        $("#form_digitally_signed").siblings("label").addClass("fw-bold text-danger");
                        $("#form_digitally_signed").focus();
                    }
                    else if (fileInput.files.length === 0) {
                        $("#form_odometer_image").siblings("label").addClass("fw-bold text-danger");
                        $("#form_odometer_image").focus();

                        fileInput.addEventListener("change", function () {
                         if (this.files.length > 0) {
                         $("#form_odometer_image").siblings("label").removeClass("fw-bold text-danger");
                            }
                        });
                    }
                    else if (!isButtonClicked) {
                        $("#form_odometer_image").siblings("label").addClass("fw-bold text-danger");
                        $("#form_odometer_image").focus();

                        fileInput.addEventListener("change", function () {
                            if (this.files.length > 0) {
                                $("#form_odometer_image").siblings("label").removeClass("fw-bold text-danger");
                            }
                        });
                    }
                });
            });

            $("#chooseEstimate1").on(
			"click select",
			(event) => {
				preventEvent(event);
				formSubmit({
                        form: $("#estimate_form"),
                        url: "/ChoosePaymentOption",
					failedFunction: function (xhr, status, error) {
						// todo: maybe have these all have their own error panels near the buttons
						$("#error").show().text(error);
					},
					successFunction: function (data) {
						if (data === false) {
							$("#error").show().text("An unknown error occurred while processing your request.");
						}
						else {
                            $("#quote_form").toggle();
                            let card = $("#choosePaymentOption");

							card.find(".termMonths").text(data.term.toLocaleString());
							card.find(".termMiles").text(data.mileage.toLocaleString());
							card.find(".planName").text(data.planDescription);
							card.find(".deductible").text(data.deductAmt.toLocaleString());
							card.find(".cost").text(data.retailRate.toLocaleString());
							card.find(".card.quote").attr("rateId", data.rateId);

							window.scrollTo(0, 0);
                            
                            $("#estimateListParent").hide()
                            $("#choosePaymentOption").show();
							//card.slideDown("slow");
							$("#quoteRequestDetails").slideDown("slow");
						}
					},

				});
			});

			$("#submit_quote1").on(
				"click select",
				(event) => {
					preventEvent(event);
					let form = $("#quote_form");
					if (form.valid()) {
						formSubmit({
							form: form,
							url: "/CustomerDetails",
							successFunction: function (data) {
								if (data === null) {
									$("#error").show().text("An unknown error occurred while processing your request.");
								}
								else {
									window.location = "/payment-details";
								}
							}
						});
					}
				});

            $("#submit_quote").on(
                "click select",
                (event) => {
                    preventEvent(event);
                    let form = $("#quote_form");
                    if (form.valid()) {
                        formSubmit({
                            form: form,
                            url: "/CustomerDetails",
                            successFunction: function (data) {
                                if (data === false) {
                                    $("#error").show().text("An unknown error occurred while processing your request.");
                                }
                                else {
                                    $("#quote_form").toggle();
                                    
                                    window.scrollTo(0, 0);

                                    $("#estimateDetails").hide()
                                    $("#estimateListParent").hide()
                                    $("#choosePaymentOption").show();
                                    //card.slideDown("slow");
                                    $("#quoteRequestDetails").slideDown("slow");
                                }
                            }
                        });
                    }
                });
		});
	</script>
}
